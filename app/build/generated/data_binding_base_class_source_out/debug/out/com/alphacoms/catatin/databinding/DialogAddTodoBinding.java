// Generated by view binder compiler. Do not edit!
package com.alphacoms.catatin.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.alphacoms.catatin.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogAddTodoBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final MaterialButton btnSelectDueDate;

  @NonNull
  public final TextInputEditText etTodoDescription;

  @NonNull
  public final TextInputEditText etTodoTitle;

  @NonNull
  public final Spinner spinnerPriority;

  private DialogAddTodoBinding(@NonNull LinearLayout rootView,
      @NonNull MaterialButton btnSelectDueDate, @NonNull TextInputEditText etTodoDescription,
      @NonNull TextInputEditText etTodoTitle, @NonNull Spinner spinnerPriority) {
    this.rootView = rootView;
    this.btnSelectDueDate = btnSelectDueDate;
    this.etTodoDescription = etTodoDescription;
    this.etTodoTitle = etTodoTitle;
    this.spinnerPriority = spinnerPriority;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogAddTodoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogAddTodoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_add_todo, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogAddTodoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnSelectDueDate;
      MaterialButton btnSelectDueDate = ViewBindings.findChildViewById(rootView, id);
      if (btnSelectDueDate == null) {
        break missingId;
      }

      id = R.id.etTodoDescription;
      TextInputEditText etTodoDescription = ViewBindings.findChildViewById(rootView, id);
      if (etTodoDescription == null) {
        break missingId;
      }

      id = R.id.etTodoTitle;
      TextInputEditText etTodoTitle = ViewBindings.findChildViewById(rootView, id);
      if (etTodoTitle == null) {
        break missingId;
      }

      id = R.id.spinnerPriority;
      Spinner spinnerPriority = ViewBindings.findChildViewById(rootView, id);
      if (spinnerPriority == null) {
        break missingId;
      }

      return new DialogAddTodoBinding((LinearLayout) rootView, btnSelectDueDate, etTodoDescription,
          etTodoTitle, spinnerPriority);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
